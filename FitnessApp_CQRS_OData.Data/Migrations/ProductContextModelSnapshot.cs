// <auto-generated />
using System;
using FitnessApp_CQRS_OData.Data_EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FitnessAppCQRSOData.DataEF.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.NutrientCategoryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("NutrientCategories", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.NutrientDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("DailyDose")
                        .HasColumnType("double precision");

                    b.Property<int?>("NutrientCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("NutrientCategoryId");

                    b.ToTable("Nutrients", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductCategoryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProductSubCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductSubCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductNutrientDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NutrientId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<double>("Quality")
                        .HasColumnType("double precision");

                    b.Property<int?>("TreatingTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("NutrientId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TreatingTypeId");

                    b.ToTable("ProductNutrients", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductSubCategoryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductSubCategories", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.TreatingTypeDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("TreatingTypes", (string)null);
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.NutrientDb", b =>
                {
                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.NutrientCategoryDb", "NutrientCategory")
                        .WithMany("Nutrients")
                        .HasForeignKey("NutrientCategoryId");

                    b.Navigation("NutrientCategory");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductDb", b =>
                {
                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.ProductSubCategoryDb", "ProductSubCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubCategoryId");

                    b.Navigation("ProductSubCategory");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductNutrientDb", b =>
                {
                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.NutrientDb", "Nutrient")
                        .WithMany("ProductNutrients")
                        .HasForeignKey("NutrientId");

                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.ProductDb", "Product")
                        .WithMany("ProductNutrients")
                        .HasForeignKey("ProductId");

                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.TreatingTypeDb", "TreatingType")
                        .WithMany("ProductNutrients")
                        .HasForeignKey("TreatingTypeId");

                    b.Navigation("Nutrient");

                    b.Navigation("Product");

                    b.Navigation("TreatingType");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductSubCategoryDb", b =>
                {
                    b.HasOne("FitnessApp_CQRS_OData.Data_EF.Models.ProductCategoryDb", "ProductCategory")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("ProductCategoryId");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.NutrientCategoryDb", b =>
                {
                    b.Navigation("Nutrients");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.NutrientDb", b =>
                {
                    b.Navigation("ProductNutrients");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductCategoryDb", b =>
                {
                    b.Navigation("ProductSubCategories");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductDb", b =>
                {
                    b.Navigation("ProductNutrients");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.ProductSubCategoryDb", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FitnessApp_CQRS_OData.Data_EF.Models.TreatingTypeDb", b =>
                {
                    b.Navigation("ProductNutrients");
                });
#pragma warning restore 612, 618
        }
    }
}
