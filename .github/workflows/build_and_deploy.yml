# Build and Deploy
name: Build and Deploy
on:
  workflow_dispatch:
    branches:
      - "master"
jobs:

  deploy-dev:
    runs-on: ubuntu-latest
    env:
      TITLE: ${{ secrets.TITLE }}
      API_URL: ${{ secrets.API_URL }}
    environment: 'Development'
    # needs: build-and-publish
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Deps
        working-directory: ./FitnessApp_CQRS_OData.ClientApp
        run: npm ci

      - name: Build
        working-directory: ./FitnessApp_CQRS_OData.ClientApp
        run: npm run build
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./FitnessApp_CQRS_OData.ClientApp/dist/fitness-app-cqrs-odata.client-app
          name: build-files

      # Download published artifact
      - name: Download build project
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: ./build
      # Deploy to github pages
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
      #   with:
      #     artifact_name: build-files

      # - name: Deploy to netlify
      #   uses: jsmrcaga/action-netlify-deploy@v2.0.0
      #   with:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
      #     NETLIFY_DEPLOY_TO_PROD: true

      #   - name: Deploy to Netlify
      #     uses: netlify/actions/cli@master
      # # Step to deploy to Netlify
      #     env:
      #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #       NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
      # # Secrets for authentication
      #     with:
      #       args: deploy --dir=build --prod

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        timeout-minutes: 1  
  

  deploy-staging:
    runs-on: 'ubuntu-latest'
    env:
      TITLE: ${{ secrets.TITLE }}
      API_URL: ${{ secrets.API_URL }}
    environment: 'Staging'
    needs: deploy-dev
    steps:

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Deps
        working-directory: ./FitnessApp_CQRS_OData.ClientApp
        run: npm ci
        
      - name: Build
        working-directory: ./FitnessApp_CQRS_OData.ClientApp
        run: npm run build
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./FitnessApp_CQRS_OData.ClientApp/dist/fitness-app-cqrs-odata.client-app
          name: build-files

      # Download published artifact
      - name: Download build project
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: ./build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        timeout-minutes: 1 

  # deploy-prod:
  #   runs-on: 'ubuntu-latest'
  #   environment: 'prod'
  #   needs: [build-and-publish, deploy-dev, deploy-staging]
  #   steps:

  #     # Download published artifact
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: published-app
  #         path: './published-app'

  #     # Deploy to github pages
  #     - name: Deploy to Azure WebApp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: app-cloudlumberjack-prod
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         package: './published-app